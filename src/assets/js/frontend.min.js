!function(a){
	"use strict";
	
	var b=function(){
		this.pageScrollElement="html, body",
		this.$body=a("body")
	};

b.prototype.isVisibleXs=function(){return!a("#pg-visible-xs").length&&this.$body.append('<div id="pg-visible-xs" class="visible-xs" />'),a("#pg-visible-xs").is(":visible")},

b.prototype.isVisibleSm=function(){return!a("#pg-visible-sm").length&&this.$body.append('<div id="pg-visible-sm" class="visible-sm" />'),a("#pg-visible-sm").is(":visible")},

b.prototype.isVisibleMd=function(){return!a("#pg-visible-md").length&&this.$body.append('<div id="pg-visible-md" class="visible-md" />'),a("#pg-visible-md").is(":visible")},

b.prototype.isVisibleLg=function(){return!a("#pg-visible-lg").length&&this.$body.append('<div id="pg-visible-lg" class="visible-lg" />'),a("#pg-visible-lg").is(":visible")},

b.prototype.getUserAgent=function(){return a("body").hasClass("mobile")?"mobile":"desktop"},

b.prototype.setBackgroundImage=function(){a("[data-pages-bg-image]").each(function(){var b=a(this),c={pagesBgImage:"",lazyLoad:"true",progressType:"",progressColor:"",bgOverlay:"",bgOverlayClass:"",overlayOpacity:0},d=b.data();a.extend(c,d);var e=c.pagesBgImage,f=c.bgOverlay,g=c.overlayOpacity,h=a('<div class="bg-overlay"></div>');h.addClass(c.bgOverlayClass),h.css({"background-color":f,opacity:1}),b.append(h);var i=new Image;i.src=e,i.onload=function(){b.css({"background-image":"url("+e+")"}),b.children(".bg-overlay").css({opacity:g})}})},

b.prototype.initFormGroupDefault=function(){a(".form-group.form-group-default").click(function(){a(this).find("input").focus()}),a("body").on("focus",".form-group.form-group-default :input",function(){a(".form-group.form-group-default").removeClass("focused"),a(this).parents(".form-group").addClass("focused")}),a("body").on("blur",".form-group.form-group-default :input",function(){a(this).parents(".form-group").removeClass("focused"),a(this).val()?a(this).closest(".form-group").find("label").addClass("fade"):a(this).closest(".form-group").find("label").removeClass("fade")}),a(".form-group.form-group-default .checkbox, .form-group.form-group-default .radio").hover(function(){a(this).parents(".form-group").addClass("focused")},function(){a(this).parents(".form-group").removeClass("focused")})},

b.prototype.init=function(){this.setBackgroundImage(),this.initFormGroupDefault()},

a.Pages=new b,a.Pages.Constructor=b}(window.jQuery),function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("pg.header"),f="object"==typeof b&&b;e||d.data("pg.header",e=new c(this,f)),"string"==typeof b&&e[b]()})}

var c=function(b,c){this.$body=a("body"),this.$element=a(b),this.options=a.extend(!0,{},a.fn.header.defaults,c),"autoresize"==this.$element.attr("data-pages-header")&&(this.options.autoresize=!0),null!=this.$element.attr("data-pages-header")&&(this.options.minimizedClass=this.options.minimizedClass+" "+this.$element.attr("data-pages-resize-class")),this.initAffix()};

c.prototype.initAffix=function(){"true"==this.$element.attr("data-pages-autofixed")&&this.$element.affix({offset:{top:this.$element.offset().top}})},

c.prototype.updateAffix=function(){"true"==this.$element.attr("data-pages-autofixed")&&(console.log(this.$element.offset().top),this.$element.removeData("affix").removeClass("affix affix-top affix-bottom"),this.$element.affix({offset:this.$element.offset().top}))},

c.prototype.addMinimized=function(){this.options.autoresize&&!this.$element.hasClass("affix-top")&&(this.$element.hasClass(this.options.minimizedClass)||this.$element.addClass(this.options.minimizedClass))},

c.prototype.removeMinized=function(){(this.options.autoresize||this.$element.hasClass("affix-top"))&&this.$element.removeClass(this.options.minimizedClass)};var d=a.fn.header;a.fn.header=b,a.fn.header.Constructor=c,a.fn.header.defaults={duration:350,autoresize:!1,minimizedClass:"minimized"},a.fn.header.noConflict=function(){return a.fn.header=d,this},a(document).ready(function(){a(".menu > li > a").on("mouseenter click",function(b){a(this).parent().hasClass("mega")?a(this).parent().hasClass("open")?a(this).parents(".container").removeClass("clip-mega-menu"):a(this).parents(".container").addClass("clip-mega-menu"):a(this).parents(".container").removeClass("clip-mega-menu"),a(this).parent().toggleClass("open").siblings().removeClass("open")}),a(".desktop .menu > li > nav").on("mouseleave",function(b){a(".menu > li").removeClass("open")})}),a(window).on("load",function(){a('[data-pages="header"]').each(function(){var b=a(this);b.header(b.data())})}),a('[data-pages="header-toggle"]').on("click touchstart",function(b){b.preventDefault();var c=a(this);c.attr("data-pages-element");a("body").toggleClass("menu-opened"),a('[data-pages="header-toggle"]').toggleClass("on")}),a(window).on("resize",function(){a('[data-pages="header"]').header("updateAffix")}),a(window).on("scroll",function(){var b=parseInt(a(window).scrollTop());b>1?a('[data-pages="header"]').header("addMinimized"):10>b&&a('[data-pages="header"]').header("removeMinized")})}(window.jQuery),function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("pg.parallax"),f="object"==typeof b&&b;e||d.data("pg.parallax",e=new c(this,f)),"string"==typeof b&&e[b]()})}var c=function(b,c){if(this.$element=a(b),this.$body=a("body"),this.options=a.extend(!0,{},a.fn.parallax.defaults,c),this.$coverPhoto=this.$element.find(".cover-photo"),this.$content=this.$element.find(".inner"),this.$coverPhoto.find("> img").length){var d=this.$coverPhoto.find("> img");this.$coverPhoto.css("background-image","url("+d.attr("src")+")"),d.remove()}this.translateBgImage()};c.VERSION="1.0.0",

c.prototype.animate=function(b){var c,d=(this.$element.height(),"translateX");c=a(window).scrollTop(),this.$body.hasClass("mobile")&&(c=-b),d="translateY",this.$coverPhoto.css({transform:d+"("+c*this.options.speed.coverPhoto+"px)"}),this.$content.css({transform:d+"("+c*this.options.speed.content+"px)"}),this.translateBgImage()},

c.prototype.translateBgImage=function(){var b=a(window).scrollTop(),c=this.$element.height();if(this.$element.attr("data-pages-bg-image")){var d=this.$element.offset().top-b;if(d>-c&&d<=a(window).height()){var e=100-(a(window).height()-d)/(a(window).height()+c)*100;this.$element.css({"background-position":"center "+e+"%"})}}};var d=a.fn.parallax;a.fn.parallax=b,a.fn.parallax.Constructor=c,a.fn.parallax.defaults={speed:{coverPhoto:.3,content:.17}},a.fn.parallax.noConflict=function(){return a.fn.parallax=d,this},a(window).on("load",function(){a('[data-pages="parallax"]').each(function(){var b=a(this);b.parallax(b.data())})}),a(window).on("scroll",function(){a('[data-pages="parallax"]').parallax("animate")})}(window.jQuery),function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("pg.portlet"),f="object"==typeof b&&b;e||d.data("pg.portlet",e=new c(this,f)),"string"==typeof b?e[b]():f.hasOwnProperty("refresh")?e.refresh(f.refresh):f.hasOwnProperty("error")&&e.error(f.error)})}var c=function(b,c){this.$element=a(b),this.options=a.extend(!0,{},a.fn.portlet.defaults,c),this.$loader=null,this.$body=this.$element.find(".panel-body")};c.VERSION="1.0.0",

c.prototype.collapse=function(){var b=this.$element.find(this.options.collapseButton+" > i");this.$element.find(".panel-heading");return this.$body.stop().slideToggle("fast"),this.$element.hasClass("panel-collapsed")?(this.$element.removeClass("panel-collapsed"),b.removeClass().addClass("pg-arrow_maximize"),void(a.isFunction(this.options.onExpand)&&this.options.onExpand())):(this.$element.addClass("panel-collapsed"),b.removeClass().addClass("pg-arrow_minimize"),void(a.isFunction(this.options.onCollapse)&&this.options.onCollapse()))},

c.prototype.close=function(){this.$element.remove(),a.isFunction(this.options.onClose)&&this.options.onClose()},

c.prototype.maximize=function(){var b=this.$element.find(this.options.maximizeButton+" > i");this.$element.hasClass("panel-maximized")?(this.$element.removeClass("panel-maximized"),b.removeClass("pg-fullscreen_restore").addClass("pg-fullscreen"),a.isFunction(this.options.onRestore)&&this.options.onRestore()):(this.$element.addClass("panel-maximized"),b.removeClass("pg-fullscreen").addClass("pg-fullscreen_restore"),a.isFunction(this.options.onMaximize)&&this.options.onMaximize())},

c.prototype.refresh=function(b){var c=this.$element.find(this.options.refreshButton);
if(b){if(this.$loader&&this.$loader.is(":visible"))return;
if(!a.isFunction(this.options.onRefresh))return;this.$loader=a('<div class="portlet-progress"></div>'),this.$loader.css({"background-color":"rgba("+this.options.overlayColor+","+this.options.overlayOpacity+")"});var d="";if("circle"==this.options.progress)d+='<div class="progress-circle-indeterminate progress-circle-'+this.options.progressColor+'"></div>';else if("bar"==this.options.progress)d+='<div class="progress progress-small">',d+='    <div class="progress-bar-indeterminate progress-bar-'+this.options.progressColor+'"></div>',d+="</div>";else if("circle-lg"==this.options.progress){c.addClass("refreshing");var e,f=c.find("> i").first();c.find('[class$="-animated"]').length?e=c.find('[class$="-animated"]'):(e=a("<i/>"),e.css({position:"absolute",top:f.position().top,left:f.position().left}),e.addClass("portlet-icon-refresh-lg-"+this.options.progressColor+"-animated"),c.append(e)),f.addClass("fade"),e.addClass("active")}else d+='<div class="progress progress-small">',d+='    <div class="progress-bar-indeterminate progress-bar-'+this.options.progressColor+'"></div>',d+="</div>";this.$loader.append(d),this.$element.append(this.$loader);var g=this.$loader;setTimeout(function(){this.$loader.remove(),this.$element.append(g)}.bind(this),300),this.$loader.fadeIn(),a.isFunction(this.options.onRefresh)&&this.options.onRefresh()}else{var h=this;this.$loader.fadeOut(function(){if(a(this).remove(),"circle-lg"==h.options.progress){var b=c.find(".active"),d=c.find(".fade");b.removeClass("active"),d.removeClass("fade"),c.removeClass("refreshing")}h.options.refresh=!1})}},

c.prototype.error=function(a){if(a){var b=this;this.$element.pgNotification({style:"bar",message:a,position:"top",timeout:0,type:"danger",onShown:function(){b.$loader.find("> div").fadeOut()},onClosed:function(){b.refresh(!1)}}).show()}};var d=a.fn.portlet;a.fn.portlet=b,a.fn.portlet.Constructor=c,a.fn.portlet.defaults={progress:"circle",progressColor:"master",refresh:!1,error:null,overlayColor:"255,255,255",overlayOpacity:.8,refreshButton:'[data-toggle="refresh"]',maximizeButton:'[data-toggle="maximize"]',collapseButton:'[data-toggle="collapse"]',closeButton:'[data-toggle="close"]'},a.fn.portlet.noConflict=function(){return a.fn.portlet=d,this},a(document).on("click.pg.portlet.data-api",'[data-toggle="collapse"]',function(b){var c=a(this),d=c.closest(".panel");c.is("a")&&b.preventDefault(),d.data("pg.portlet")&&d.portlet("collapse")}),a(document).on("click.pg.portlet.data-api",'[data-toggle="close"]',function(b){var c=a(this),d=c.closest(".panel");c.is("a")&&b.preventDefault(),d.data("pg.portlet")&&d.portlet("close")}),a(document).on("click.pg.portlet.data-api",'[data-toggle="refresh"]',function(b){var c=a(this),d=c.closest(".panel");c.is("a")&&b.preventDefault(),d.data("pg.portlet")&&d.portlet({refresh:!0})}),a(document).on("click.pg.portlet.data-api",'[data-toggle="maximize"]',function(b){var c=a(this),d=c.closest(".panel");c.is("a")&&b.preventDefault(),d.data("pg.portlet")&&d.portlet("maximize")}),a(window).on("load",function(){a('[data-pages="portlet"]').each(function(){var b=a(this);b.portlet(b.data())})})}(window.jQuery),function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("pg.search"),f="object"==typeof b&&b;e||d.data("pg.search",e=new c(this,f)),"string"==typeof b&&e[b]()})}var c=function(b,c){this.$element=a(b),this.options=a.extend(!0,{},a.fn.search.defaults,c),this.init()};c.VERSION="1.0.0",

c.prototype.init=function(){var b=this;this.pressedKeys=[],this.ignoredKeys=[],this.$searchField=this.$element.find(this.options.searchField),this.$closeButton=this.$element.find(this.options.closeButton),this.$suggestions=this.$element.find(this.options.suggestions),this.$brand=this.$element.find(this.options.brand),this.$searchField.on("keyup",function(c){b.$suggestions&&b.$suggestions.html(a(this).val())}),this.$searchField.on("keyup",function(c){return b.options.onKeyEnter&&b.options.onKeyEnter(b.$searchField.val()),13==c.keyCode&&(c.preventDefault(),b.options.onSearchSubmit&&b.options.onSearchSubmit(b.$searchField.val())),a("body").hasClass("overlay-disabled")?0:void 0}),this.$closeButton.on("click",function(){b.toggleOverlay("hide")}),this.$element.on("click",function(c){"search"==a(c.target).data("pages")&&b.toggleOverlay("hide")}),a(document).on("keypress.pg.search",function(a){b.keypress(a)}),a(document).on("keyup",function(a){b.$element.is(":visible")&&27==a.keyCode&&b.toggleOverlay("hide")})},

c.prototype.keypress=function(b){b=b||event;var c=b.target.nodeName;a("body").hasClass("overlay-disabled")||a(b.target).hasClass("js-input")||"INPUT"==c||"TEXTAREA"==c||0===b.which||0===b.charCode||b.ctrlKey||b.metaKey||b.altKey||27==b.keyCode||this.toggleOverlay("show",String.fromCharCode(b.keyCode|b.charCode))},

c.prototype.toggleOverlay=function(b,c){var d=this;"show"==b?(this.$element.removeClass("hide"),this.$element.fadeIn("fast"),this.$searchField.is(":focus")||(this.$searchField.val(c),setTimeout(function(){this.$searchField.focus();var a=this.$searchField.val();this.$searchField.val(""),this.$searchField.val(a)}.bind(this),100)),this.$element.removeClass("closed"),this.$brand.toggleClass("invisible"),a(document).off("keypress.pg.search")):(this.$element.fadeOut("fast").addClass("closed"),this.$searchField.val("").blur(),setTimeout(function(){this.$element.is(":visible")&&this.$brand.toggleClass("invisible"),a(document).on("keypress.pg.search",function(a){d.keypress(a)})}.bind(this),100))};var d=a.fn.search;a.fn.search=b,a.fn.search.Constructor=c,a.fn.search.defaults={searchField:'[data-search="searchField"]',closeButton:'[data-search="closeButton"]',suggestions:'[data-search="suggestions"]',brand:'[data-search="brand"]'},a.fn.search.noConflict=function(){return a.fn.search=d,this},a(document).on("click.pg.search.data-api",'[data-toggle="search"]',function(b){var c=a(this),d=a('[data-pages="search"]');c.is("a")&&b.preventDefault(),d.data("pg.search").toggleOverlay("show")})}(window.jQuery),function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("pgFloat"),f="object"==typeof b&&b;e||d.data("pgFloat",e=new c(this,f)),"string"==typeof b&&e[b]()})}var c=function(b,c){function d(){var b=f.$element,c=a(window).scrollTop(),d=(c-b.offset().top)*f.options.speed,g=f.options.delay/1e3,h=f.options.curve,i=f.options.maxTopTranslate,j=f.options.maxBottomTranslate;if(!(0==i&&b.offset().top+b.outerHeight()<c||0==j&&b.offset().top>c+a(window).height())){if(d>e){if(0!=i&&Math.abs(d)>i)return}else if(0!=j&&Math.abs(d)>j)return;b.css({transition:"transform "+g+"s "+h,transform:"translateY("+d+"px)"}),e=d}}this.$element=a(b),this.options=a.extend(!0,{},a.fn.pgFloat.defaults,c);var e,f=this;a(window).bind("scroll",function(){d()}),a(window).bind("load",function(){d()})};c.VERSION="1.0.0";var d=a.fn.pgFloat;a.fn.pgFloat=b,a.fn.pgFloat.Constructor=c,a.fn.pgFloat.defaults={topMargin:0,bottomMargin:0,speed:.1,delay:1e3,curve:"ease"},a.fn.pgFloat.noConflict=function(){return a.fn.pgFloat=d,this},a(window).on("load",function(){a('[data-pages="float"]').each(function(){var b=a(this);b.pgFloat(b.data())})})}(window.jQuery),function(a){"use strict";"undefined"==typeof angular&&a.Pages.init()}(window.jQuery);






(function($) {
    'use strict';

    /**
     * @property {string}  pageScrollElement  - Scroll Element in Page.
     * @property {object}  $body - Cache Body.
     */
    var Pages = function() {
        this.pageScrollElement = 'html, body';
        this.$body = $('body');
    }

    /** @function initSidebar
    * @description Initialize side bar to open and close
    * @param {(Element|JQuery)} [context] - A DOM Element, Document, or jQuery to use as context.
    */
    Pages.prototype.initSidebar = function(context) {
        $('[data-pages="sidebar"]', context).each(function() {
            var $sidebar = $(this)
            $sidebar.sidebar($sidebar.data())
        })
    }

    Pages.prototype.initScrollBarPlugin = function(context) {
        $.fn.scrollbar && $('.scrollable', context).scrollbar({
            ignoreOverlay: false
        });
    }
    /** @function initListView
    * @description Initialize iOS like List view plugin
    * @param {(Element|JQuery)} [context] - A DOM Element, Document, or jQuery to use as context.
    * @example <caption>data-init-list-view="ioslist"</caption>
    * @requires jquery-ioslist.js
    */
    Pages.prototype.initListView = function(context) {
        $.fn.ioslist && $('[data-init-list-view="ioslist"]', context).ioslist();
        $.fn.scrollbar && $('.list-view-wrapper', context).scrollbar({
            ignoreOverlay: false
        });
    }

    /** @function initSelectFxPlugin
    * @description Initialize iOS like List view plugin
    * @param {(Element|JQuery)} [context] - A DOM Element, Document, or jQuery to use as context.
    * @example <caption>select[data-init-plugin="cs-select"]</caption>
    */
    Pages.prototype.initSelectFxPlugin = function(context) {
        window.SelectFx && $('select[data-init-plugin="cs-select"]', context).each(function() {
            var el = $(this).get(0);
            $(el).wrap('<div class="cs-wrapper"></div>');
            new SelectFx(el);
        });
    }
    
    /** @function init
    * @description Initialize all core components.
    */
    Pages.prototype.init = function() {
        this.initSidebar();
        this.initScrollBarPlugin();
        this.initListView();
    }

    $.Pages = new Pages();
    $.Pages.Constructor = Pages;

})(window.jQuery);



/* ============================================================
 * Pages Chat
 * ============================================================ */

(function($) {
  'use strict';
  //To Open Chat When Clicked
  $('[data-chat-input]').on('keypress',function(e){
    if(e.which == 13) {
       var el = $(this).attr('data-chat-conversation');
       $(el).append('<div class="message clearfix">'+
        '<div class="chat-bubble from-me">'+$(this).val()+
        '</div></div>');
       $(this).val('');
    }
  });

})(window.jQuery);



/* ============================================================
 * Pages Mobile View
 * ============================================================ */
(function($) {
    'use strict';

    var MobileView = function(element, options) {
        var self = this;
        self.options = $.extend(true, {}, $.fn.pgMobileViews.defaults, options);
        self.element = $(element);
        self.element.on('click', function(e) {
            e.preventDefault();
            var data = self.element.data();
            var el = $(data.viewPort);
            var toView = data.toggleView;
            if (data.toggleView != null) {
                el.children().last().children('.view').hide();
                $(data.toggleView).show();
            }
            else{
                 toView = el.last();
            }
            el.toggleClass(data.viewAnimation);
            self.options.onNavigate(toView, data.viewAnimation);
            return false;
        })
        return this; // enable chaining
    };
    $.fn.pgMobileViews = function(options) {
        return new MobileView(this, options);
    };

    $.fn.pgMobileViews.defaults = {
        //Returns Target View & Animation Type
        onNavigate: function(view, animation) {}
    }
    // MOBILE VIEW DATA API
    //===================

    $(window).on('load', function() {
        $('[data-navigate="view"]').each(function() {
            var $mobileView = $(this)
            $mobileView.pgMobileViews();
        })
    });
})(window.jQuery);




/* ============================================================
 * Pages Quickview Plugin
 * ============================================================ */

(function($) {
    'use strict';
    // QUICKVIEW CLASS DEFINITION
    // ======================

    var Quickview = function(element, options) {
        this.$element = $(element);
        this.options = $.extend(true, {}, $.fn.quickview.defaults, options);
        this.bezierEasing = [.05, .74, .27, .99];
        var _this = this;

        $(this.options.notes).on('click', '.list > ul > li', function(e) {
            var note = $(this).find('.note-preview');
            var note = $(this).find('.note-preview');
            $(_this.options.noteEditor).html(note.html());
            $(_this.options.notes).toggleClass('push');
        });
        $(this.options.notes).on('click', '.list > ul > li .checkbox', function(e) {
            e.stopPropagation();
        });
        $(this.options.notes).on('click', _this.options.backButton, function(e) {
            $(_this.options.notes).find('.toolbar > li > a').removeClass('active');
            $(_this.options.notes).toggleClass('push');
        });
        $(this.options.deleteNoteButton).click(function(e) {
            e.preventDefault();
            $(this).toggleClass('selected');
            $(_this.options.notes).find('.list > ul > li .checkbox').fadeToggle("fast");
            $(_this.options.deleteNoteConfirmButton).fadeToggle("fast").removeClass('hide');
        });
        $(this.options.newNoteButton).click(function(e) {
            e.preventDefault();
            $(_this.options.noteEditor).html('');
        });

        $(this.options.deleteNoteConfirmButton).click(function() {
            var checked = $(_this.options.notes).find('input[type=checkbox]:checked');
            checked.each(function() {
                $(this).parents('li').remove();
            });
        });
        $(this.options.notes).on('click', '.toolbar > li > a', function(e) {
            //e.preventDefault();
            var command = $(this).attr('data-action');
            document.execCommand(command, false, null);
            $(this).toggleClass('active');
        });

    }
    Quickview.VERSION = "1.0.0";

    // QUICKVIEW PLUGIN DEFINITION
    // =======================
    function Plugin(option) {
        return this.each(function() {
            var $this = $(this);
            var data = $this.data('pg.quickview');
            var options = typeof option == 'object' && option;

            if (!data) $this.data('pg.quickview', (data = new Quickview(this, options)));
            if (typeof option == 'string') data[option]();
        })
    }

    var old = $.fn.quickview

    $.fn.quickview = Plugin
    $.fn.quickview.Constructor = Quickview


    $.fn.quickview.defaults = {
        notes: '#note-views',
        alerts: '#alerts',
        chat: '#chat',
        notesList: '.list',
        noteEditor: '.quick-note-editor',
        deleteNoteButton: '.delete-note-link',
        deleteNoteConfirmButton: '.btn-remove-notes',
        newNoteButton: '.new-note-link',
        backButton: '.close-note-link'
    }

    // QUICKVIEW NO CONFLICT
    // ====================

    $.fn.quickview.noConflict = function() {
        $.fn.quickview = old;
        return this;
    }

    // QUICKVIEW DATA API
    //===================

    $(window).on('load', function() {

        $('[data-pages="quickview"]').each(function() {
            var $quickview = $(this)
            $quickview.quickview($quickview.data())
        })
    });


    $(document).on('click.pg.quickview.data-api touchstart', '[data-toggle="quickview"]', function(e) {
        var elem = $(this).attr('data-toggle-element');
        if (Modernizr.csstransitions) {
            $(elem).toggleClass('open');
        } else {
            var width = $(elem).width();
            if (!$(elem).hasClass('open-ie')) {
                $(elem).stop().animate({
                    right: -1 * width
                }, 400, $.bez([.05, .74, .27, .99]), function() {
                    $(elem).addClass('open-ie')
                });
            } else {
                $(elem).stop().animate({
                    right: 0
                }, 400, $.bez([.05, .74, .27, .99]), function() {
                    $(elem).removeClass('open-ie')
                });
            }
        }
        e.preventDefault();
    })

})(window.jQuery);


 /* ============================================================
  * Pages Sidebar
  * ============================================================ */

 (function($) {
    'use strict';
     // SIDEBAR CLASS DEFINITION
     // ======================

    var Sidebar = function(element, options) {
         this.$element = $(element);
         this.$body = $('body');
         this.options = $.extend(true, {}, $.fn.sidebar.defaults, options);

         this.bezierEasing = [.05, .74, .27, .99];
         this.cssAnimation = true;
         this.css3d = true;

         this.sideBarWidth = 280;
         this.sideBarWidthCondensed = 280 - 70;

         this.$sidebarMenu = this.$element.find('.sidebar-menu > ul');
         this.$pageContainer = $(this.options.pageContainer);
         
         if (!this.$sidebarMenu.length) return;

         // apply perfectScrollbar plugin only for desktops
         //($.Pages.getUserAgent() == 'desktop') && this.$sidebarMenu.scrollbar({
//             ignoreOverlay: false
//         });


         if (!Modernizr.csstransitions)
             this.cssAnimation = false;
         if (!Modernizr.csstransforms3d)
             this.css3d = false;

         // Bind events
         // Toggle sub menus
         // In Angular Binding is done using a pg-sidebar directive
         (typeof angular === 'undefined') && $(document).on('click', '.sidebar-menu a', function(e) {

             if ($(this).parent().children('.sub-menu') === false) {
                 return;
             }
             var el = $(this);
             var parent = $(this).parent().parent();
             var li = $(this).parent();
             var sub = $(this).parent().children('.sub-menu');

             if(li.hasClass("open active")){
                el.children('.arrow').removeClass("open active");
                sub.slideUp(200, function() {
                    li.removeClass("open active"); 
                });
                
             }else{
                parent.children('li.open').children('.sub-menu').slideUp(200);
                parent.children('li.open').children('a').children('.arrow').removeClass('open active');
                parent.children('li.open').removeClass("open active");
                el.children('.arrow').addClass("open active");
                sub.slideDown(200, function() {
                    li.addClass("open active");

                });
             }
             //e.preventDefault();
         });

         // Toggle sidebar
         $('.sidebar-slide-toggle').on('click touchend', function(e) {
             e.preventDefault();
             $(this).toggleClass('active');
             var el = $(this).attr('data-pages-toggle');
             if (el != null) {
                 $(el).toggleClass('show');
             }
         });

         var _this = this;

         function sidebarMouseEnter(e) {
            var _sideBarWidthCondensed = _this.$body.hasClass("rtl") ? -_this.sideBarWidthCondensed : _this.sideBarWidthCondensed;
           
             var menuOpenCSS = (this.css3d == true ? 'translate3d(' + _sideBarWidthCondensed + 'px, 0,0)' : 'translate(' + _sideBarWidthCondensed + 'px, 0)');

             //if ($.Pages.isVisibleSm() || $.Pages.isVisibleXs()) {
//                 return false
//             }
             if ($('.close-sidebar').data('clicked')) {
                 return;
             }
             if (_this.$body.hasClass('menu-pin'))
                 return;
             if (_this.cssAnimation) {
                 _this.$element.css({
                     'transform': menuOpenCSS
                 });
                 _this.$body.addClass('sidebar-visible');
             } else {
                 _this.$element.stop().animate({
                     left: '0px'
                 }, 400, $.bez(_this.bezierEasing), function() {
                     _this.$body.addClass('sidebar-visible');
                 });
             }
         }

         function sidebarMouseLeave(e) {
            var menuClosedCSS = (_this.css3d == true ? 'translate3d(0, 0,0)' : 'translate(0, 0)');

             //if ($.Pages.isVisibleSm() || $.Pages.isVisibleXs()) {
//                 return false
//             }
             if (typeof e != 'undefined') {
                 var target = $(e.target);
                 if (target.parent('.page-sidebar').length) {
                     return;
                 }
             }
             if (_this.$body.hasClass('menu-pin'))
                 return;

             if ($('.sidebar-overlay-slide').hasClass('show')) {
                 $('.sidebar-overlay-slide').removeClass('show')
                 $("[data-pages-toggle']").removeClass('active')

             }

             if (_this.cssAnimation) {
                 _this.$element.css({
                     'transform': menuClosedCSS
                 });
                 _this.$body.removeClass('sidebar-visible');
             } else {

                 _this.$element.stop().animate({
                     left: '-' + _this.sideBarWidthCondensed + 'px'
                 }, 400, $.bez(_this.bezierEasing), function() {

                     _this.$body.removeClass('sidebar-visible')
                     setTimeout(function() {
                         $('.close-sidebar').data({
                             clicked: false
                         });
                     }, 100);
                 });
             }
         }


         this.$element.bind('mouseenter mouseleave', sidebarMouseEnter);
         this.$pageContainer.bind('mouseover', sidebarMouseLeave);

     }


     // Toggle sidebar for mobile view   
     Sidebar.prototype.toggleSidebar = function(toggle) {
         var timer;
         var bodyColor = $('body').css('background-color');
         $('.page-container').css('background-color', bodyColor);
         if (this.$body.hasClass('sidebar-open')) {
             this.$body.removeClass('sidebar-open');
             timer = setTimeout(function() {
                 this.$element.removeClass('visible');
             }.bind(this), 400);
         } else {
             clearTimeout(timer);
             this.$element.addClass('visible');
             setTimeout(function() {
                 this.$body.addClass('sidebar-open');
             }.bind(this), 10);
             setTimeout(function(){
                // remove background color
                $('.page-container').css({'background-color': ''});
             },1000);

         }

     }

     Sidebar.prototype.togglePinSidebar = function(toggle) {
         if (toggle == 'hide') {
             this.$body.removeClass('menu-pin');
         } else if (toggle == 'show') {
             this.$body.addClass('menu-pin');
         } else {
             this.$body.toggleClass('menu-pin');
         }

     }


     // SIDEBAR PLUGIN DEFINITION
     // =======================
     function Plugin(option) {
         return this.each(function() {
             var $this = $(this);
             var data = $this.data('pg.sidebar');
             var options = typeof option == 'object' && option;

             if (!data) $this.data('pg.sidebar', (data = new Sidebar(this, options)));
             if (typeof option == 'string') data[option]();
         })
     }

     var old = $.fn.sidebar;

     $.fn.sidebar = Plugin;
     $.fn.sidebar.Constructor = Sidebar;


     $.fn.sidebar.defaults = {
         pageContainer: '.page-container'
     }

     // SIDEBAR PROGRESS NO CONFLICT
     // ====================

     $.fn.sidebar.noConflict = function() {
         $.fn.sidebar = old;
         return this;
     }

     // SIDEBAR PROGRESS DATA API
     //===================

     $(document).on('click.pg.sidebar.data-api', '[data-toggle-pin="sidebar"]', function(e) {
         e.preventDefault();
         var $this = $(this);
         var $target = $('[data-pages="sidebar"]');
         $target.data('pg.sidebar').togglePinSidebar();
         return false;
     })
     $(document).on('click.pg.sidebar.data-api touchstart', '[data-toggle="sidebar"]', function(e) {
         e.preventDefault();
         var $this = $(this);
         var $target = $('[data-pages="sidebar"]');
         $target.data('pg.sidebar').toggleSidebar();
         return false
     })

 })(window.jQuery);
/* ============================================================
 * Pages Search overlay
 * ============================================================ */

(function($) {

    'use strict';

    // SEARCH CLASS DEFINITION
    // ======================

    var Search = function(element, options) {
        this.$element = $(element);
        this.options = $.extend(true, {}, $.fn.search.defaults, options);
        this.init();
    }
    Search.VERSION = "1.0.0";

    Search.prototype.init = function() {
        var _this = this;
        this.pressedKeys = [];
        this.ignoredKeys = [];

        //Cache elements
        this.$searchField = this.$element.find(this.options.searchField);
        this.$closeButton = this.$element.find(this.options.closeButton);
        this.$suggestions = this.$element.find(this.options.suggestions);
        this.$brand = this.$element.find(this.options.brand);

        this.$searchField.on('keyup', function(e) {
            _this.$suggestions && _this.$suggestions.html($(this).val());
        });

        this.$searchField.on('keyup', function(e) {
            _this.options.onKeyEnter && _this.options.onKeyEnter(_this.$searchField.val());
            if (e.keyCode == 13) { //Enter pressed
                e.preventDefault();
                _this.options.onSearchSubmit && _this.options.onSearchSubmit(_this.$searchField.val());
            }
            if ($('body').hasClass('overlay-disabled')) {
                return 0;
            }

        });

        this.$closeButton.on('click', function() {
            _this.toggleOverlay('hide');
        });

        this.$element.on('click', function(e) {
            if ($(e.target).data('pages') == 'search') {
                _this.toggleOverlay('hide');
            }
        });

        $(document).on('keypress.pg.search', function(e) {
            _this.keypress(e);
        });

        $(document).on('keyup', function(e) {
            // Dismiss overlay on ESC is pressed
            if (_this.$element.is(':visible') && e.keyCode == 27) {
                _this.toggleOverlay('hide');
            }
        });

    }


    Search.prototype.keypress = function(e) {

        e = e || event; // to deal with IE
        var nodeName = e.target.nodeName;
        if ($('body').hasClass('overlay-disabled') ||
            $(e.target).hasClass('js-input') ||
            nodeName == 'INPUT' ||
            nodeName == 'TEXTAREA') {
            return;
        }

        if (e.which !== 0 && e.charCode !== 0 && !e.ctrlKey && !e.metaKey && !e.altKey && e.keyCode != 27) {
            this.toggleOverlay('show', String.fromCharCode(e.keyCode | e.charCode));
        }
    }


    Search.prototype.toggleOverlay = function(action, key) {
        var _this = this;
        if (action == 'show') {
            this.$element.removeClass("hide");
            this.$element.fadeIn("fast");
            if (!this.$searchField.is(':focus')) {
                this.$searchField.val(key);
                setTimeout(function() {
                    this.$searchField.focus();
                    var tmpStr = this.$searchField.val();
                    this.$searchField.val('');
                    this.$searchField.val(tmpStr);
                }.bind(this), 10);
            }

            this.$element.removeClass("closed");
            this.$brand.toggleClass('invisible');
            $(document).off('keypress.pg.search');
        } else {
            this.$element.fadeOut("fast").addClass("closed");
            this.$searchField.val('').blur();
            setTimeout(function() {
                if ((this.$element).is(':visible')) {
                    this.$brand.toggleClass('invisible');
                }
                $(document).on('keypress.pg.search', function(e) {
                    _this.keypress(e);
                });
            }.bind(this), 10);
        }
    };

    // SEARCH PLUGIN DEFINITION
    // =======================


    function Plugin(option) {
        return this.each(function() {
            var $this = $(this);
            var data = $this.data('pg.search');
            var options = typeof option == 'object' && option;

            if (!data) {
                $this.data('pg.search', (data = new Search(this, options)));

            }
            if (typeof option == 'string') data[option]();
        })
    }

    var old = $.fn.search

    $.fn.search = Plugin
    $.fn.search.Constructor = Search

    $.fn.search.defaults = {
        searchField: '[data-search="searchField"]',
        closeButton: '[data-search="closeButton"]',
        suggestions: '[data-search="suggestions"]',
        brand: '[data-search="brand"]'
    }

    // SEARCH NO CONFLICT
    // ====================

    $.fn.search.noConflict = function() {
        $.fn.search = old;
        return this;
    }

    $(document).on('click.pg.search.data-api', '[data-toggle="search"]', function(e) {
        var $this = $(this);
        var $target = $('[data-pages="search"]');
        if ($this.is('a')) e.preventDefault();
        $target.data('pg.search').toggleOverlay('show');
    })


})(window.jQuery);
(function($) {
    'use strict';
    // Initialize layouts and plugins
    (typeof angular === 'undefined') && $.Pages.init();
})(window.jQuery);
